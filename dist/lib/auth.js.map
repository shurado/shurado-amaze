{"version":3,"sources":["../../src/lib/auth.js"],"names":["passport","require","Strategy","User","user","pathOr","moment","dotenv","config","serializeUser","done","id","deserializeUser","findById","then","catch","err","init","app","use","clientID","process","env","FACEBOOK_APPID","clientSecret","FACEBOOK_TOKEN","callbackURL","profileFields","accessToken","refreshToken","profile","find","where","social_account","facebook","create","nickname","displayName","gender","avatar_url","photos","value","error","registerRoutes","get","req","res","next","authenticate","failureRedirect","authUserId","session","jwt_token","tokenForUser","SECRET_KEY","cookie","expires","add","toDate","redirect","param","module","exports"],"mappings":"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","file":"auth.js","sourcesContent":["\nconst passport = require('passport');\nconst Strategy = require('passport-facebook').Strategy;\nconst User = require('../models/').user;\nconst { pathOr } = require('ramda');\nconst moment = require('moment');\nconst dotenv = require('dotenv');\n\ndotenv.config();\n\npassport.serializeUser((user, done) => {\n  done(null, user.id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.findById(id)\n    .then((user) => done(null, user))\n    .catch((err) => done(err, false));\n});\n\n/* not good idea to pass app. */\nfunction init(app) {\n  passport.use(new Strategy({\n    clientID: process.env.FACEBOOK_APPID,\n    clientSecret: process.env.FACEBOOK_TOKEN,\n    callbackURL: '/auth/facebook/callback',\n    profileFields: ['id', 'displayName', 'photos', 'email', 'birthday', 'gender']\n  }, (accessToken, refreshToken, profile, done) => {\n    User.find({\n      where: { social_account: { facebook: profile.id } }\n    })\n      .then(user => {\n        /**\n         * if user did exist, return that user.\n         * if user doesn't exist, create user by `profile.id`\n         * \n         * make sure there is no chance to create two identical user.\n         */\n        if (user) {\n          done(null, user);\n        } else {\n          User.create({\n            nickname: profile.displayName,\n            gender: profile.gender,\n            social_account: {\n              facebook: profile.id,\n            },\n            avatar_url: {\n              facebook: profile.photos[0].value\n            }\n          }).then((user) => done(null, user));\n        }\n      })\n      .catch(error => {\n        done(error, false);\n      })\n  }));\n}\n\nfunction registerRoutes(app) {\n  app.get('/auth/facebook', (req, res, next) => {\n    passport.authenticate('facebook', {\n      callbackURL: '/auth/facebook/callback'\n    })(req, res, next);\n  });\n\n  app.get('/auth/facebook/callback', passport.authenticate('facebook', { failureRedirect: '/fail'}), (req, res) => {\n    const authUserId = pathOr(null, ['passport', 'user'])(req.session);\n\n    if (authUserId) {\n      User.findById(authUserId).then(user => {\n        const jwt_token = user.tokenForUser(process.env.SECRET_KEY);\n        res.cookie('jwt_token', jwt_token, {\n          expires: moment().add(2, 'months').toDate()\n        });\n\n        res.cookie('uid', user.id ,{\n          expires: moment().add(2, 'months').toDate()\n        })\n\n        res.redirect(303, req.param.redirect || '/');\n      })\n    }\n  })\n}\n\nmodule.exports = {\n  init,\n  registerRoutes,\n};\n"]}