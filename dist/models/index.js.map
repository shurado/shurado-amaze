{"version":3,"sources":["../../src/models/index.js"],"names":["fs","require","path","Sequelize","basename","module","filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","exports"],"mappings":";;AACA,IAAMA,KAAYC,QAAQ,IAAR,CAAlB;AACA,IAAMC,OAAYD,QAAQ,MAAR,CAAlB;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;;AAEA,IAAMG,WAAYF,KAAKE,QAAL,CAAcC,OAAOC,QAArB,CAAlB;AACA,IAAMC,MAAYC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAA1C;AACA,IAAMC,SAAYT,QAAQU,YAAY,wBAApB,EAA8CJ,GAA9C,CAAlB,C,CAAsE;AACtE,IAAMK,KAAY,EAAlB;;AAEA,IAAIC,YAAY,IAAhB;;AAEA,IAAIH,OAAOI,gBAAX,EAA6B;AAC3BD,cAAY,IAAIV,SAAJ,CAAcK,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACLD,cAAY,IAAIV,SAAJ,CAAcO,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDV,GACGkB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEU;AAAA,SAASC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAAShB,QAAvC,IAAqDgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAAhF;AAAA,CAFV,EAGGC,OAHH,CAGW,gBAAQ;AACf,MAAMC,QAAQX,UAAUY,MAAV,CAAiBvB,KAAKwB,IAAL,CAAUf,SAAV,EAAqBS,IAArB,CAAjB,CAAd;AACAR,KAAGY,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CANH;;AAQAI,OAAOC,IAAP,CAAYjB,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACnC,MAAIX,GAAGkB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BnB,OAAGkB,SAAH,EAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGT,SAAH,GAAeA,SAAf;;AAEAE,OAAO2B,OAAP,GAAiBpB,EAAjB","file":"index.js","sourcesContent":["\nconst fs        = require('fs');\nconst path      = require('path');\nconst Sequelize = require('sequelize');\n\nconst basename  = path.basename(module.filename);\nconst env       = process.env.NODE_ENV || 'development';\nconst config    = require(__dirname + '/../config/config.json')[env]; // eslint-disable-line\nconst db        = {};\n\nlet sequelize = null;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach(file => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}